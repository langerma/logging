filter {
    if [type] == "pfsense" {
        grok {
            add_tag => [ "firewall" ]
            match => ["message", "<(?<evtid>.*)>(?<datetime>(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)\s+(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9]) (?:2[0123]|[01]?[0-9]):(?:[0-5][0-9]):(?:[0-5][0-9])) (?<prog>.*?): (?<msg>.*)"]
        }
        mutate {
            gsub => ["datetime","  "," "]
        }
        date {
            match => [ "datetime", "MMM dd HH:mm:ss" ]
        }
        mutate {
            replace => [ "message", "%{msg}" ]
        }
        mutate {
            remove_field => [ "msg", "datetime" ]
        }
	}
    if [prog] =~ /^dhcpd$/ {
        grok {
            patterns_dir => ["/etc/logstash/conf.d/patterns"]
            match => [ "message", "%{DHCPD}" ]
        }
    }
    if [prog] =~ /^\/usr\/sbin\/cron/ {
        mutate {
            replace => ["prog", "cron"]
        }
    }
    if [prog] =~ /^sshd/ {
        mutate {
            replace => ["prog", "sshd" ]
        }
    }
    if [prog] =~ /^filterlog$/ {
        mutate {
            remove_field => [ "msg", "datetime" ]
        }
        grok {
            patterns_dir => ["/etc/logstash/conf.d/patterns"]
            match =>  [ "message", "%{PFSENSE_LOG_DATA}%{PFSENSE_IP_SPECIFIC_DATA}%{PFSENSE_IP_DATA}%{PFSENSE_PROTOCOL_DATA}" ]
        }
        if "_grokparsefailure" in [tags] {
            mutate {
                remove_tag => [ "_grokparsefailure" ]
            }
            grok {
                patterns_dir => ["/etc/logstash/conf.d/patterns"]
                match => [
                    "message", "%{PFSENSE_LOG_DATA}%{PFSENSE_IPv6_SPECIFIC_DATA}%{PFSENSE_IP_DATA}%{PFSENSE_PROTOCOL_DATA}",
                    "message", "%{PFSENSE_LOG_DATA}%{PFSENSE_IP_SPECIFIC_DATA}%{PFSENSE_IP_DATA}"
                ]
            }
        }
        mutate {
            add_field => { "src_dns" => "%{src_ip}" }
        }
        dns {
            action => "replace"
            reverse => [ "src_dns" ]
            add_tag => [ "dns_lookup" ]
        }
        mutate {
            add_field => { "dest_dns" => "%{dest_ip}" }
        }
        dns {
            action => "replace"
            reverse => [ "dest_dns" ]
            add_tag => [ "dns_lookup" ]
        }
         translate {
            field => "proto"
            destination => "proto"
            override => "true"
            dictionary => [ "udp", "UDP", "tcp", "TCP", "icmp", "ICMP", "ICMPv6", "ICMP", "igmp", "IGMP" ]
        }
	}
	if [prog] =~ /^snort/ {
        mutate {
            add_tag => [ "snort" ]
        }
	}
	if [prog] =~ /^suricata/ {
        mutate {
            add_tag => [ "snort" ]
        }
    }
}
